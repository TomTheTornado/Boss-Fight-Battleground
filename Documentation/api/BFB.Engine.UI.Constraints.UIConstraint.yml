### YamlMime:ManagedReference
items:
- uid: BFB.Engine.UI.Constraints.UIConstraint
  commentId: T:BFB.Engine.UI.Constraints.UIConstraint
  id: UIConstraint
  parent: BFB.Engine.UI.Constraints
  children:
  - BFB.Engine.UI.Constraints.UIConstraint.#ctor(System.String)
  - BFB.Engine.UI.Constraints.UIConstraint.Apply(BFB.Engine.UI.Components.UIComponent)
  - BFB.Engine.UI.Constraints.UIConstraint.Name
  langs:
  - csharp
  - vb
  name: UIConstraint
  nameWithType: UIConstraint
  fullName: BFB.Engine.UI.Constraints.UIConstraint
  type: Class
  source:
    remote:
      path: BFB/BFB.Engine/UI/Constraints/UIConstraint.cs
      branch: develop
      repo: https://git.linux.iastate.edu/cs309/fall2019/ks_5.git
    id: UIConstraint
    path: ../BFB/BFB.Engine/UI/Constraints/UIConstraint.cs
    startLine: 4
  assemblies:
  - BFB.Engine
  namespace: BFB.Engine.UI.Constraints
  syntax:
    content: 'public abstract class UIConstraint : object'
    content.vb: >-
      Public MustInherit Class UIConstraint

          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - BFB.Engine.UI.Constraints.UIAspectRatioConstraint
  - BFB.Engine.UI.Constraints.UIBackgroundConstraint
  - BFB.Engine.UI.Constraints.UICenterConstraint
  - BFB.Engine.UI.Constraints.UIColorConstraint
  - BFB.Engine.UI.Constraints.UIFontSizeConstraint
  - BFB.Engine.UI.Constraints.UIHeightConstraint
  - BFB.Engine.UI.Constraints.UIPositionConstraint
  - BFB.Engine.UI.Constraints.UIWidthConstraint
  extensionMethods:
  - BFB.Engine.UI.Constraints.UIConstraint.BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue``2(Expression{Func{BFB.Engine.UI.Constraints.UIConstraint,{TValue}}},{TValue})
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: BFB.Engine.UI.Constraints.UIConstraint.Name
  commentId: P:BFB.Engine.UI.Constraints.UIConstraint.Name
  id: Name
  parent: BFB.Engine.UI.Constraints.UIConstraint
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: UIConstraint.Name
  fullName: BFB.Engine.UI.Constraints.UIConstraint.Name
  type: Property
  source:
    remote:
      path: BFB/BFB.Engine/UI/Constraints/UIConstraint.cs
      branch: develop
      repo: https://git.linux.iastate.edu/cs309/fall2019/ks_5.git
    id: Name
    path: ../BFB/BFB.Engine/UI/Constraints/UIConstraint.cs
    startLine: 7
  assemblies:
  - BFB.Engine
  namespace: BFB.Engine.UI.Constraints
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: BFB.Engine.UI.Constraints.UIConstraint.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BFB.Engine.UI.Constraints.UIConstraint.#ctor(System.String)
  commentId: M:BFB.Engine.UI.Constraints.UIConstraint.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: BFB.Engine.UI.Constraints.UIConstraint
  langs:
  - csharp
  - vb
  name: UIConstraint(String)
  nameWithType: UIConstraint.UIConstraint(String)
  fullName: BFB.Engine.UI.Constraints.UIConstraint.UIConstraint(System.String)
  type: Constructor
  source:
    remote:
      path: BFB/BFB.Engine/UI/Constraints/UIConstraint.cs
      branch: develop
      repo: https://git.linux.iastate.edu/cs309/fall2019/ks_5.git
    id: .ctor
    path: ../BFB/BFB.Engine/UI/Constraints/UIConstraint.cs
    startLine: 9
  assemblies:
  - BFB.Engine
  namespace: BFB.Engine.UI.Constraints
  syntax:
    content: public UIConstraint(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub New(name As String)
  overload: BFB.Engine.UI.Constraints.UIConstraint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BFB.Engine.UI.Constraints.UIConstraint.Apply(BFB.Engine.UI.Components.UIComponent)
  commentId: M:BFB.Engine.UI.Constraints.UIConstraint.Apply(BFB.Engine.UI.Components.UIComponent)
  id: Apply(BFB.Engine.UI.Components.UIComponent)
  parent: BFB.Engine.UI.Constraints.UIConstraint
  langs:
  - csharp
  - vb
  name: Apply(UIComponent)
  nameWithType: UIConstraint.Apply(UIComponent)
  fullName: BFB.Engine.UI.Constraints.UIConstraint.Apply(BFB.Engine.UI.Components.UIComponent)
  type: Method
  source:
    remote:
      path: BFB/BFB.Engine/UI/Constraints/UIConstraint.cs
      branch: develop
      repo: https://git.linux.iastate.edu/cs309/fall2019/ks_5.git
    id: Apply
    path: ../BFB/BFB.Engine/UI/Constraints/UIConstraint.cs
    startLine: 14
  assemblies:
  - BFB.Engine
  namespace: BFB.Engine.UI.Constraints
  syntax:
    content: public abstract void Apply(UIComponent component)
    parameters:
    - id: component
      type: BFB.Engine.UI.Components.UIComponent
    content.vb: Public MustOverride Sub Apply(component As UIComponent)
  overload: BFB.Engine.UI.Constraints.UIConstraint.Apply*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: BFB.Engine.UI.Constraints
  commentId: N:BFB.Engine.UI.Constraints
  name: BFB.Engine.UI.Constraints
  nameWithType: BFB.Engine.UI.Constraints
  fullName: BFB.Engine.UI.Constraints
- uid: System.Object
  commentId: '!:System.Object'
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BFB.Engine.UI.Constraints.UIConstraint.BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue``2(Expression{Func{BFB.Engine.UI.Constraints.UIConstraint,{TValue}}},{TValue})
  commentId: M:BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue``2(``0,Expression{Func{``0,``1}},``1)
  parent: BFB.Engine.UI.Components.LambdaExtensions
  definition: BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue``2(``0,Expression{Func{``0,``1}},``1)
  name: SetPropertyValue<UIConstraint, TValue>(Expression<Func<UIConstraint, TValue>>, TValue)
  nameWithType: LambdaExtensions.SetPropertyValue<UIConstraint, TValue>(Expression<Func<UIConstraint, TValue>>, TValue)
  fullName: BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue<BFB.Engine.UI.Constraints.UIConstraint, TValue>(Expression<Func<BFB.Engine.UI.Constraints.UIConstraint, TValue>>, TValue)
  nameWithType.vb: LambdaExtensions.SetPropertyValue(Of UIConstraint, TValue)(Expression(Of Func(Of UIConstraint, TValue)), TValue)
  fullName.vb: BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue(Of BFB.Engine.UI.Constraints.UIConstraint, TValue)(Expression(Of Func(Of BFB.Engine.UI.Constraints.UIConstraint, TValue)), TValue)
  name.vb: SetPropertyValue(Of UIConstraint, TValue)(Expression(Of Func(Of UIConstraint, TValue)), TValue)
  spec.csharp:
  - uid: BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue``2(Expression{Func{``0,``1}},``1)
    name: SetPropertyValue<UIConstraint, TValue>
    nameWithType: LambdaExtensions.SetPropertyValue<UIConstraint, TValue>
    fullName: BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue<BFB.Engine.UI.Constraints.UIConstraint, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BFB.Engine.UI.Constraints.UIConstraint
    name: UIConstraint
    nameWithType: UIConstraint
    fullName: BFB.Engine.UI.Constraints.UIConstraint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue``2(Expression{Func{``0,``1}},``1)
    name: SetPropertyValue(Of UIConstraint, TValue)
    nameWithType: LambdaExtensions.SetPropertyValue(Of UIConstraint, TValue)
    fullName: BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue(Of BFB.Engine.UI.Constraints.UIConstraint, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BFB.Engine.UI.Constraints.UIConstraint
    name: UIConstraint
    nameWithType: UIConstraint
    fullName: BFB.Engine.UI.Constraints.UIConstraint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue``2(``0,Expression{Func{``0,``1}},``1)
  commentId: M:BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue``2(``0,Expression{Func{``0,``1}},``1)
  isExternal: true
  name: SetPropertyValue<T, TValue>(T, Expression<Func<T, TValue>>, TValue)
  nameWithType: LambdaExtensions.SetPropertyValue<T, TValue>(T, Expression<Func<T, TValue>>, TValue)
  fullName: BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue<T, TValue>(T, Expression<Func<T, TValue>>, TValue)
  nameWithType.vb: LambdaExtensions.SetPropertyValue(Of T, TValue)(T, Expression(Of Func(Of T, TValue)), TValue)
  fullName.vb: BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue(Of T, TValue)(T, Expression(Of Func(Of T, TValue)), TValue)
  name.vb: SetPropertyValue(Of T, TValue)(T, Expression(Of Func(Of T, TValue)), TValue)
  spec.csharp:
  - uid: BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue``2(``0,Expression{Func{``0,``1}},``1)
    name: SetPropertyValue<T, TValue>
    nameWithType: LambdaExtensions.SetPropertyValue<T, TValue>
    fullName: BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue<T, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue``2(``0,Expression{Func{``0,``1}},``1)
    name: SetPropertyValue(Of T, TValue)
    nameWithType: LambdaExtensions.SetPropertyValue(Of T, TValue)
    fullName: BFB.Engine.UI.Components.LambdaExtensions.SetPropertyValue(Of T, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: BFB.Engine.UI.Components.LambdaExtensions
  commentId: T:BFB.Engine.UI.Components.LambdaExtensions
  parent: BFB.Engine.UI.Components
  name: LambdaExtensions
  nameWithType: LambdaExtensions
  fullName: BFB.Engine.UI.Components.LambdaExtensions
- uid: BFB.Engine.UI.Components
  commentId: N:BFB.Engine.UI.Components
  name: BFB.Engine.UI.Components
  nameWithType: BFB.Engine.UI.Components
  fullName: BFB.Engine.UI.Components
- uid: BFB.Engine.UI.Constraints.UIConstraint.Name*
  commentId: Overload:BFB.Engine.UI.Constraints.UIConstraint.Name
  name: Name
  nameWithType: UIConstraint.Name
  fullName: BFB.Engine.UI.Constraints.UIConstraint.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BFB.Engine.UI.Constraints.UIConstraint.#ctor*
  commentId: Overload:BFB.Engine.UI.Constraints.UIConstraint.#ctor
  name: UIConstraint
  nameWithType: UIConstraint.UIConstraint
  fullName: BFB.Engine.UI.Constraints.UIConstraint.UIConstraint
- uid: BFB.Engine.UI.Constraints.UIConstraint.Apply*
  commentId: Overload:BFB.Engine.UI.Constraints.UIConstraint.Apply
  name: Apply
  nameWithType: UIConstraint.Apply
  fullName: BFB.Engine.UI.Constraints.UIConstraint.Apply
- uid: BFB.Engine.UI.Components.UIComponent
  commentId: T:BFB.Engine.UI.Components.UIComponent
  parent: BFB.Engine.UI.Components
  name: UIComponent
  nameWithType: UIComponent
  fullName: BFB.Engine.UI.Components.UIComponent
